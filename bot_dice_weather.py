#  –ú–û–ô –ü–ï–†–í–´–ô –ë–û–¢ —Å –ø–æ–º–æ—â—å—é –±–∏–±–ª–∏–æ—Ç–µ–∫–∏ aiogram

#  –®–ê–ì 1. –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –≤—Å–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –±–∏–±–ª–∏–æ—Ç–µ–∫–∏
#  –∏–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º —Ç–æ–∫–µ–Ω—ã –∏–∑ –∫–æ–Ω—Ñ–∏–≥ —Ñ–∞–π–ª–∞
from config import TOKEN, open_weather_token
#  –¥–ª—è –ø–æ–≥–æ–¥—ã –∏–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º
import requests
#  –∏–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –±–∏–±–ª–∏–æ—Ç–µ–∫–∏
import logging
from aiogram import Bot, Dispatcher, executor, types
import datetime
from db_weather import db_weather

#  –®–ê–ì 2.
#  –û–±—ä–µ–∫—Ç –±–æ—Ç–∞
bot = Bot(token=TOKEN, parse_mode=types.ParseMode.HTML)
#  –î–∏—Å–ø–µ—Ç—á–µ—Ä –¥–ª—è –±–æ—Ç–∞
dp = Dispatcher(bot)
# –í–∫–ª—é—á–∞–µ–º –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ, —á—Ç–æ–±—ã –Ω–µ –ø—Ä–æ–ø—É—Å—Ç–∏—Ç—å –≤–∞–∂–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è
logging.basicConfig(level=logging.INFO)

#  –®–ê–ì 3.
#  –ü—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ –±–æ—Ç–∞
@dp.message_handler(commands=['start'])
async def process_hello(message: types.Message):
    await bot.send_message(message.from_user.id,'–ü—Ä–∏–≤–µ—Ç!\n–ú–µ–Ω—è –∑–æ–≤—É—Ç FIRSTBOT!\n'
                                                '–í–≤–µ–¥–∏ /help, —á—Ç–æ–±—ã —É–∑–Ω–∞—Ç—å —á—Ç–æ —è —É–º–µ—é')

#  –ü—Ä–æ—Å–∏–º —É –±–æ—Ç–∞ –ø–æ–º–æ—â–∏
@dp.message_handler(commands=['help'])
async def process_help(message: types.Message):
    await bot.send_message(message.from_user.id, '–Ø –º–æ–≥—É –ø–æ–∫–∞ –Ω–∞–π—Ç–∏ –ø–æ–≥–æ–¥—É - /weather')

'''=============================== –ü–û–ì–û–î–ê ========================================'''

# –ó–ê–ü–†–û–° –ü–û–ì–û–î–´
@dp.message_handler(commands= "weather")
async def process_get_city(message: types.Message):
    await bot.send_message(message.from_user.id, '–í–≤–æ–¥–∏–º –ª–æ–∫–∞—Ü–∏—é: ')
@dp.message_handler(content_types=["text"])
async def process_get_weather(msg: types.Message):
    city = msg.text
    r = requests.get(f'http://api.openweathermap.org/data/2.5/weather?q={city}'
                         f'&appid={open_weather_token}&units=metric')
    data_weather = r.json()
    errs = {"cod":"404","message":"city not found"}
    if data_weather == errs:
        await bot.send_message(msg.from_user.id,'–ü—Ä–æ–≤–µ—Ä—å –ª–æ–∫–∞—Ü–∏—é')
    else:
        city = data_weather['name']
        temp = data_weather['main']['temp']
        pressure = data_weather['main']['pressure']
        humidity = data_weather['main']['humidity']
        description_weather = data_weather['weather'][0]['main']
        today = datetime.datetime.now()
        today_string = today.strftime(" %d-%b-%Y ")

    await bot.send_message(msg.from_user.id, f'–ü–æ–≥–æ–¥–∞ –Ω–∞ {today_string} –¥–ª—è {city}:\n'
                                             f'–¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞  {int(temp)} C\n'
                                             f'–î–∞–≤–ª–µ–Ω–∏–µ  {pressure} –º–º —Ä—Ç.—Å—Ç\n'
                                             f'–í–ª–∞–∂–Ω–æ—Å—Ç—å  {humidity} %\n'
                                             f'–û–ø–∏—Å–∞–Ω–∏–µ  {db_weather[description_weather]}\n'
                                             f'------- –•–æ—Ä–æ—à–µ–≥–æ –¥–Ω—è! -------')

''' =========================================== –ü–û–ü–£–ì–ê–ô ====================================== '''

# –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞
if __name__ == "__main__":
    executor.start_polling(dp, skip_updates=True)

# #  –ë—Ä–æ—Å–∞–µ–º –∫–æ—Å—Ç–∏
# @dp.message_handler(commands="dice")
# async def cmd_dice(message: types.Message):
#     await message.bot.send_dice(message.from_user.id, emoji="üé≤")
#
# #  –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –Ω–∞–∑–∞–¥ —Å–æ–æ–±—â–µ–Ω–∏—è –ü–û–ü–£–ì–ê–ô
# @dp.message_handler(commands="reply")
# async def cmd_answer(message: types.Message):
#     await message.answer('–ù–∞—á–∏–Ω–∞—é –ø–æ–≤—Ç–æ—Ä—è—Ç—å')
#
# @dp.message_handler()
# async def echo_message(msg: types.Message):
#         await bot.send_message(msg.from_user.id, msg.text)
